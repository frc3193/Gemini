// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::axialTestVicA1;
std::shared_ptr<SpeedController> RobotMap::axialTestVicA2;
std::shared_ptr<SpeedController> RobotMap::axialTestVicB1;
std::shared_ptr<SpeedController> RobotMap::axialTestVicB2;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<ADXRS450_Gyro> RobotMap::gyroTest;
void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    axialTestVicA1.reset(new VictorSP(0));
    lw->AddActuator("AxialTest", "VicA1", std::static_pointer_cast<VictorSP>(axialTestVicA1));
    
    axialTestVicA2.reset(new VictorSP(1));
    lw->AddActuator("AxialTest", "VicA2", std::static_pointer_cast<VictorSP>(axialTestVicA2));
    
    axialTestVicB1.reset(new VictorSP(2));
    lw->AddActuator("AxialTest", "VicB1", std::static_pointer_cast<VictorSP>(axialTestVicB1));
    
    axialTestVicB2.reset(new VictorSP(3));
    lw->AddActuator("AxialTest", "VicB2", std::static_pointer_cast<VictorSP>(axialTestVicB2));
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    gyroTest.reset(new ADXRS450_Gyro(SPI::Port::kOnboardCS0));
}
